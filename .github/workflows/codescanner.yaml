# .github/workflows/codeql-scan.yml

name: "CodeQL Scan"

on:
  push:
    paths:
      - "samples/**"
  pull_request:
    paths:
      - "samples/**"
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}ScanTest
  cancel-in-progress: true
  
permissions:
  contents: read
  security-events: write

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        # Define the languages to scan.
        # Options: csharp, cpp, go, java, javascript, python, ruby
        language: ['javascript', 'python']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    # 1. Initialize CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    # 2. Autobuild (for compiled languages; skipped for Python/JS)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    # 3. Perform CodeQL Analysis
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    - name: Run Trivy Scan
      uses: aquasecurity/trivy-action@master
      with:
        # The type of scan to run (e.g., 'fs' for filesystem)
        scan-type: 'fs'
        # The directory to scan
        path: '.'
        # The output format, 'github' for GitHub's native format
        format: 'github'
        # Where to save the output of the scan
        output: 'trivy-results.sarif'
        # The trivy exit code for vulnerability found
        exit-code: '0'

    - name: Upload Trivy results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
